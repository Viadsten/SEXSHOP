/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_ios_android_vh_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ios-android-vh-fix */ "./js/utils/ios-android-vh-fix.js");
/* harmony import */ var _modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/modals/init-modals */ "./js/modules/modals/init-modals.js");
/* harmony import */ var _modules_main_slider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/main-slider */ "./js/modules/main-slider.js");
/* harmony import */ var _modules_main_page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/main-page */ "./js/modules/main-page.js");
/* harmony import */ var _modules_init_preloader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/init-preloader */ "./js/modules/init-preloader.js");
/* harmony import */ var _modules_init_anim_page__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/init-anim-page */ "./js/modules/init-anim-page.js");
/* harmony import */ var _modules_scroll_slider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/scroll-slider */ "./js/modules/scroll-slider.js");
/* harmony import */ var _modules_init_redirect__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/init-redirect */ "./js/modules/init-redirect.js");
/* harmony import */ var _modules_init_parallax__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/init-parallax */ "./js/modules/init-parallax.js");
/* harmony import */ var _modules_get_device_info__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/get-device-info */ "./js/modules/get-device-info.js");
/* harmony import */ var _modules_mobile_vh_fix__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/mobile-vh-fix */ "./js/modules/mobile-vh-fix.js");
// import {ieFix} from './utils/ie-fix';
// import {polyfillObjectFit} from './utils/polyfill-object-fit';










 // ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------
  // только если ie11
  // ieFix();
  // https://github.com/fregante/object-fit-images
  // polyfillObjectFit();
  Object(_utils_ios_android_vh_fix__WEBPACK_IMPORTED_MODULE_0__["iosAndroidVhFix"])();
  Object(_modules_main_slider__WEBPACK_IMPORTED_MODULE_2__["initSlider"])();
  Object(_modules_main_page__WEBPACK_IMPORTED_MODULE_3__["initMainPage"])();
  Object(_modules_init_redirect__WEBPACK_IMPORTED_MODULE_7__["initRedirect"])();
  Object(_modules_init_parallax__WEBPACK_IMPORTED_MODULE_8__["initParallax"])();
  Object(_modules_get_device_info__WEBPACK_IMPORTED_MODULE_9__["getDeviceInfo"])();
  Object(_modules_mobile_vh_fix__WEBPACK_IMPORTED_MODULE_10__["initVhFix"])(); // Modules
  // ---------------------------------
  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана

  window.addEventListener('load', function () {
    Object(_modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__["initModals"])();
    Object(_modules_init_preloader__WEBPACK_IMPORTED_MODULE_4__["initPreloader"])();
    Object(_modules_init_anim_page__WEBPACK_IMPORTED_MODULE_5__["initAnimPage"])();
    Object(_modules_scroll_slider__WEBPACK_IMPORTED_MODULE_6__["initScrollSlider"])();
  });
}); // ---------------------------------
// используйте .closest(el)
// для адаптивного JS используейтся matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();
// привязывайте js не на бэм, а на data-cookie
// выносим все в data-attr - url до пинов карты, настройки автопрокрутки, url к json и т.д.

/***/ }),

/***/ "./js/modules/clip-wave.js":
/*!*********************************!*\
  !*** ./js/modules/clip-wave.js ***!
  \*********************************/
/*! exports provided: clipWave */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clipWave", function() { return clipWave; });
var clipWave = function clipWave(el) {
  var widthPx = el.clientWidth;
  var heightPx = el.clientHeight;
  var offset;
  var amplitude;
  var frequency;

  if (widthPx < 450) {
    offset = 15;
  } else if (widthPx < 870) {
    offset = 20;
  } else if (widthPx < 980) {
    offset = 30;
  } else if (widthPx < 1280) {
    offset = 40;
  } else if (widthPx < 1460) {
    offset = 50;
  } else if (widthPx < 2300) {
    offset = 60;
  } else if (widthPx < 4000) {
    offset = 80;
  } else if (widthPx < 5000) {
    offset = 100;
  } else {
    offset = 150;
  }

  amplitude = offset;

  if (heightPx < 600) {
    frequency = 2.9;
  } else if (heightPx < 700) {
    frequency = 2.4;
  } else if (heightPx < 800) {
    frequency = 2.2;
  } else if (heightPx < 910) {
    frequency = 1.8;
  } else if (heightPx < 1050) {
    frequency = 1.5;
  } else if (heightPx < 1280) {
    frequency = 1.3;
  } else if (heightPx < 1400) {
    frequency = 1.1;
  } else if (heightPx < 1600) {
    frequency = 1;
  } else if (heightPx < 3000) {
    frequency = 0.6;
  } else {
    frequency = 0.5;
  }

  var units = frequency * heightPx / 100;
  var clipPathString;
  clipPathString = 'polygon(';

  for (var i = 0; i <= 100; i++) {
    var val = offset + amplitude * Math.sin(i / units);
    val = Math.round(val) / widthPx * 100;
    clipPathString += "".concat(val, "% ").concat(i, "%, ");
  }

  for (var _i = 100; _i >= 0; _i--) {
    var _val = widthPx - offset + amplitude * Math.sin(_i / units);

    _val = Math.round(_val) / widthPx * 100;

    if (_i === 0) {
      clipPathString += "".concat(_val, "% ").concat(_i, "%");
    } else {
      clipPathString += "".concat(_val, "% ").concat(_i, "%, ");
    }
  }

  clipPathString += ')';
  el.style.clipPath = clipPathString;
};



/***/ }),

/***/ "./js/modules/get-device-info.js":
/*!***************************************!*\
  !*** ./js/modules/get-device-info.js ***!
  \***************************************/
/*! exports provided: getDeviceInfo, detectDeviceInfo, device, touch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDeviceInfo", function() { return getDeviceInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detectDeviceInfo", function() { return detectDeviceInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "device", function() { return device; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "touch", function() { return touch; });
var breakpoint = window.matchMedia('(min-width:1024px)');
var breakpointSm = window.matchMedia('(max-width:767px)');
var breakpointSM2 = window.matchMedia('(max-width:1024px)');
var breakpointMd = window.matchMedia('(min-width:768px)');
var breakpointTablet = window.matchMedia('(max-width:1366px)');
var orientationPortrait = window.matchMedia('(orientation: portrait)');
var orientationLandscape = window.matchMedia('(orientation: landscape)');
var htmlEl = document.querySelector('html');
var device;
var touch;

var detectTouch = function detectTouch() {
  if (window.matchMedia('(pointer: coarse)').matches) {
    return touch = true;
  } else {
    return touch = false;
  }
};

var detectDeviceInfo = function detectDeviceInfo() {
  touch = detectTouch(touch);

  if (touch === false && breakpoint.matches) {
    device = "desktop";
    return device;
  } else if (breakpointSm.matches && orientationPortrait.matches) {
    device = "mobile portrait";
    return device;
  } else if (breakpointSm.matches && orientationLandscape.matches) {
    device = "mobile landscape";
    return device;
  } else if (breakpointTablet.matches && orientationPortrait.matches && touch === true) {
    device = "tablet portrait";
    return device;
  } else if (breakpointTablet.matches && orientationLandscape.matches && touch === true) {
    device = "tablet landscape";
    return device;
  } else {
    device = "desktop";
    return device;
  }
};

var updateDeviceInfo = function updateDeviceInfo() {
  device = detectDeviceInfo(device);
  htmlEl.dataset.device = device;
};

var getDeviceInfo = function getDeviceInfo() {
  updateDeviceInfo();
  window.addEventListener('resize', updateDeviceInfo);
  window.addEventListener('orientationchange', function () {
    window.setTimeout(updateDeviceInfo, 200);
  });
};



/***/ }),

/***/ "./js/modules/init-anim-page.js":
/*!**************************************!*\
  !*** ./js/modules/init-anim-page.js ***!
  \**************************************/
/*! exports provided: initAnimPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initAnimPage", function() { return initAnimPage; });
/* harmony import */ var _vendor_moveTo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/moveTo */ "./js/vendor/moveTo.js");
/* harmony import */ var _vendor_moveTo__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_vendor_moveTo__WEBPACK_IMPORTED_MODULE_0__);

var scrollContent = document.querySelectorAll('.scroll-content');
var page = document.querySelector('.page');
var scrollBtns = document.querySelectorAll('[data-btn="scroll"]');
var breakpoint = window.matchMedia('(max-width:767px)');
var isMobile = false;

var initAnimPage = function initAnimPage() {
  if (scrollContent.length === 0) {
    return;
  }

  setTimeout(function () {
    window.scrollTo(0, 0);
  }, 20);
  animMain();
  animScrollDown(true);
  addAnimListener();
  breakpoint.addListener(breakpointChecker);
  breakpointChecker();
};

var breakpointChecker = function breakpointChecker() {
  if (breakpoint.matches) {
    isMobile = true;
  } else {
    isMobile = false;
  }
};

var addAnimListener = function addAnimListener() {
  var scrollStatus = true;
  var timeoutStatus = true;
  var firstScroll = true;
  var numberOfWheel = [];
  var moveTo = new _vendor_moveTo__WEBPACK_IMPORTED_MODULE_0___default.a();
  scrollBtns.forEach(function (btn) {
    btn.addEventListener('click', function (e) {
      e.preventDefault();

      if (!isMobile && page.dataset.scrollScreen === '0') {
        animScrollDown();
      } else {
        var target = document.querySelector("".concat(btn.dataset.target));
        moveTo.move(target);
      }
    });
  });
  document.addEventListener('wheel', function (e) {
    if (firstScroll && !isMobile) {
      checkScrollDirection(e, scrollStatus);
      firstScroll = false;
      scrollStatus = false;
      setTimeout(function () {
        scrollStatus = true;
        timeoutStatus = true;
      }, 800);
    } // проверка на большое колличество вызова ивента скролла (решает проблему на трекпаде)


    if (numberOfWheel.length < 10) {
      numberOfWheel.push(new Date().getTime());
    } else {
      var diff = numberOfWheel[numberOfWheel.length - 1] - numberOfWheel[0];

      if (diff > 250 && !isMobile) {
        checkScrollDirection(e, scrollStatus);
        scrollStatus = false;

        if (timeoutStatus) {
          timeoutStatus = false;
          setTimeout(function () {
            scrollStatus = true;
            timeoutStatus = true;
          }, 800);
        }
      }

      numberOfWheel.shift();
      numberOfWheel.push(new Date().getTime());
    }
  }); // вызов скрола на тач устройствах

  var start = null;
  window.addEventListener('touchstart', function (e) {
    start = e.changedTouches[0];
  });
  window.addEventListener('touchend', function (e) {
    var end = e.changedTouches[0];

    if (scrollStatus && !isMobile) {
      if (end.screenY - start.screenY > 80) {
        animScrollUp(isMobile);
      } else if (end.screenY - start.screenY < -80) {
        animScrollDown(false, isMobile);
      }
    }

    scrollStatus = false;

    if (timeoutStatus) {
      timeoutStatus = false;
      setTimeout(function () {
        scrollStatus = true;
        timeoutStatus = true;
      }, isMobile ? 0 : 650);
    }
  }); // скролл на мобилках

  var scrollDirection = [];
  document.addEventListener('scroll', function () {
    if (isMobile) {
      scrollDirection.push(window.scrollY);

      if (scrollDirection[scrollDirection.length - 1] < scrollDirection[0]) {
        animScrollUpMobile();
      } else {
        animScrollDownMobile();
      }

      if (scrollDirection.length > 1) {
        scrollDirection.splice(0, 1);
      }

      if (window.scrollY === 0) {
        animScrollUpMobile();
      }
    }
  });
};

var checkScrollDirection = function checkScrollDirection(e, scrollStatus) {
  if (scrollStatus) {
    if (e.deltaY > 0) {
      animScrollDown(false);
    } else {
      animScrollUp();
    }
  }
};

var animMain = function animMain() {
  var animEl = document.querySelector('[data-load="load"]');
  setTimeout(function () {
    animEl.classList.add('loaded');
  }, 1300);
};

var animScrollDown = function animScrollDown(pageLoad) {
  var animIndex = 0;
  scrollContent.forEach(function (content, index) {
    if (content.classList.contains('is-anim')) {
      animIndex = index;
    }
  });

  if (pageLoad) {
    setTimeout(function () {
      scrollContent[0].classList.add('is-anim');
    }, 1300);
  } else if (animIndex !== scrollContent.length - 1) {
    scrollContent[animIndex].classList.add('hidden');
    scrollContent[animIndex + 1].classList.add('is-anim');
    page.dataset.scrollScreen = animIndex + 1;
  }
};

var animScrollDownMobile = function animScrollDownMobile() {
  var scrollHeight = Math.max(document.body.scrollHeight, document.body.clientHeight);

  if (window.innerHeight * 1.5 + window.scrollY >= scrollHeight) {
    page.dataset.scrollScreen = scrollContent.length - 1;
  } else if (window.scrollY >= 0) {
    page.dataset.scrollScreen = 1;
  }
};

var animScrollUp = function animScrollUp() {
  var animIndex = 0;
  scrollContent.forEach(function (content, index) {
    if (content.classList.contains('is-anim')) {
      animIndex = index;
    }
  });

  if (animIndex !== 0) {
    scrollContent[animIndex].classList.remove('is-anim');
    scrollContent[animIndex - 1].classList.remove('hidden');
    page.dataset.scrollScreen = animIndex - 1;
  }
};

var animScrollUpMobile = function animScrollUpMobile() {
  var scrollHeight = Math.max(document.body.scrollHeight, document.body.clientHeight);

  if (window.scrollY <= window.innerHeight / 3) {
    page.dataset.scrollScreen = 0;
  } else if (window.innerHeight + window.scrollY <= scrollHeight - window.innerHeight / 2) {
    page.dataset.scrollScreen = 1;
  }
};



/***/ }),

/***/ "./js/modules/init-parallax.js":
/*!*************************************!*\
  !*** ./js/modules/init-parallax.js ***!
  \*************************************/
/*! exports provided: initParallax, clearParallaxState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initParallax", function() { return initParallax; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearParallaxState", function() { return clearParallaxState; });
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var parallaxBlock = document.querySelector('.parallax');
var clientXStart;
var clientYStart;
var parallaxItems;
var breakpointSM = window.matchMedia('(max-width:767px)');
var isMobile = false;

var initParallax = function initParallax() {
  if (!parallaxBlock) {
    return;
  }

  breakpointSM.addListener(breakpointChecker);
  breakpointChecker();
  parallaxItems = _toConsumableArray(parallaxBlock.querySelectorAll('.parallax__item'));
  parallaxBlock.addEventListener('mousemove', function (evt) {
    if (!isMobile) {
      parallaxItems.forEach(function (item, index) {
        if (parallaxBlock.classList.contains('parallax--main') && !item.closest('.parallax__active-area')) {
          return;
        }

        if (clientXStart) {
          var clientXDiff = clientXStart - evt.clientX;
          var clientYDiff = clientYStart - evt.clientY;
          var speed = item.getAttribute('data-speed');

          if (index % 2 === 0) {
            item.style.transform = "translate3D(".concat(clientXDiff * speed / 40, "px, ").concat(clientYDiff * speed / 40, "px, 0)");
          } else {
            item.style.transform = "translate3D(".concat(-(clientXDiff * speed) / 50, "px, ").concat(-(clientYDiff * speed) / 50, "px, 0)");
          }

          item.style.transition = '';
        } else {
          clientXStart = evt.clientX;
          clientYStart = evt.clientY;
        }
      });
    }
  });
};

var clearParallaxState = function clearParallaxState() {
  clientXStart = 0;
  clientYStart = 0;
  parallaxItems.forEach(function (item) {
    item.style.transform = 'translate3D(0, 0, 0)';
  });
};

var breakpointChecker = function breakpointChecker() {
  if (breakpointSM.matches) {
    isMobile = true;
  } else {
    isMobile = false;
  }
};



/***/ }),

/***/ "./js/modules/init-preloader.js":
/*!**************************************!*\
  !*** ./js/modules/init-preloader.js ***!
  \**************************************/
/*! exports provided: initPreloader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initPreloader", function() { return initPreloader; });
var initPreloader = function initPreloader() {
  var preloaders = document.querySelectorAll('[data-load="preload"]');
  preloaders.forEach(function (preloader) {
    preloader.classList.add('loaded');
  });
}; // const initAfterLoader = () => {}




/***/ }),

/***/ "./js/modules/init-redirect.js":
/*!*************************************!*\
  !*** ./js/modules/init-redirect.js ***!
  \*************************************/
/*! exports provided: initRedirect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initRedirect", function() { return initRedirect; });
var redirectLinks = document.querySelectorAll('.redirect-link');
var redirectScreen = document.querySelector('.redirect-screen');

var initRedirect = function initRedirect() {
  if (!redirectLinks.length || !redirectScreen) {
    return;
  }

  var wrapper = document.querySelector('.wrapper');
  redirectLinks.forEach(function (link) {
    link.addEventListener('click', function (evt) {
      evt.preventDefault();
      redirectScreen.classList.add('redirect-screen--show');
      wrapper.classList.add('animate-redirect');
      setTimeout(function () {
        window.location.href = link.href;
      }, 1500);
    });
  });
};



/***/ }),

/***/ "./js/modules/main-page.js":
/*!*********************************!*\
  !*** ./js/modules/main-page.js ***!
  \*********************************/
/*! exports provided: initMainPage, animateMainOnLoad */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initMainPage", function() { return initMainPage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animateMainOnLoad", function() { return animateMainOnLoad; });
var mainPage = document.querySelector('.main-page');
var breakpointMd = window.matchMedia('(min-width: 1023px)');

var breakpointChecker = function breakpointChecker() {
  if (breakpointMd.matches) {
    window.removeEventListener('resize', setMainHeight);
  } else {
    window.addEventListener('resize', function () {
      console.log('resize');
      setMainHeight();
    });
  }
};

var setMainHeight = function setMainHeight() {
  console.log('resize');
  mainPage.style.height = window.innerHeight + 'px';
};

var animateMainOnLoad = function animateMainOnLoad() {
  // if (!breakpointMd.matches) {
  //   setMainHeight();
  // }
  //
  // breakpointMd.addListener(setMainHeight);
  var mainPageTitle = document.querySelector('.main-page__title .page-title__sub');
  mainPage.classList.add('animate-load');

  if (mainPageTitle) {
    mainPageTitle.addEventListener('animationend', function () {
      mainPage.classList.remove('animate-load');
      mainPage.classList.add('animate-load-end');
    });
  } else {
    setTimeout(function () {
      mainPage.classList.remove('animate-load');
      mainPage.classList.add('animate-load-end');
    }, 2000);
  }
};

var initMainPage = function initMainPage() {// window.addEventListener('load', animateMainOnLoad);
};



/***/ }),

/***/ "./js/modules/main-slider.js":
/*!***********************************!*\
  !*** ./js/modules/main-slider.js ***!
  \***********************************/
/*! exports provided: initSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initSlider", function() { return initSlider; });
/* harmony import */ var _main_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main-page */ "./js/modules/main-page.js");
/* harmony import */ var _clip_wave__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./clip-wave */ "./js/modules/clip-wave.js");
/* harmony import */ var _init_parallax__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init-parallax */ "./js/modules/init-parallax.js");



var breakpoint767 = window.matchMedia('(max-width: 767px)');
var breakpoint1023 = window.matchMedia('(max-width: 1023px)');
var breakpoint1439 = window.matchMedia('(max-width: 1439px)');
var mainSlider = document.querySelector('.main-slider');
var mainSliderSlides = document.querySelectorAll('.main-slider__slide');
var tastesWrapper = document.querySelector('.tastes');
var tastes = document.querySelectorAll('.taste');
var tastesTitles = Array.from(document.querySelectorAll('.tastes-title__subtitle'));
var tastesRedirectLink = document.querySelector('.redirect-link');
var tastesSlider;

var clearTastes = function clearTastes() {
  tastes.forEach(function (item) {
    item.classList.remove('taste--prev');
    item.classList.remove('taste--active');
    item.classList.remove('taste--next');
  });
};

var temporaryDisableSliderNavigation = function temporaryDisableSliderNavigation() {
  mainSlider.style.pointerEvents = 'none';
  mainSlider.classList.add('main-slider--disabled');
};

var markHiddenTaste = function markHiddenTaste() {
  tastes.forEach(function (taste) {
    var classList = Array.from(taste.classList);

    if (classList.includes('taste--prev') || classList.includes('taste--active') || classList.includes('taste--next') || classList.includes('taste--hiding')) {
      taste.classList.remove('taste--hidden');
    } else {
      if (!classList.includes('taste--hidden')) {
        taste.classList.add('taste--hidden');
      }
    }
  });
};

var endAnimation = function endAnimation() {
  tastesWrapper.classList.add('slide-end');
  mainSlider.style.pointerEvents = '';
  mainSlider.classList.remove('main-slider--disabled');
};

var setTastesStates = function setTastesStates(direction) {
  var activeParallaxArea = document.querySelector('.parallax__active-area');

  if (activeParallaxArea) {
    activeParallaxArea.classList.remove('parallax__active-area');
  }

  var activeSlide = document.querySelector('.swiper-slide-active');
  var activeIndex = parseInt(activeSlide.dataset.swiperSlideIndex, 10);
  var activeTasteSlide = document.querySelector("[data-taste-index=\"".concat(activeIndex, "\"]"));
  var prevTasteSlide;
  var nextTasteSlide;

  if (activeIndex === 0) {
    prevTasteSlide = document.querySelector("[data-taste-index=\"".concat(tastes.length - 1, "\"]"));
  } else {
    prevTasteSlide = document.querySelector("[data-taste-index=\"".concat(activeIndex - 1, "\"]"));
  }

  if (activeIndex === tastes.length - 1) {
    nextTasteSlide = document.querySelector('[data-taste-index="0"]');
  } else {
    nextTasteSlide = document.querySelector("[data-taste-index=\"".concat(activeIndex + 1, "\"]"));
  }

  clearTastes();
  activeTasteSlide.classList.add('taste--active');
  prevTasteSlide.classList.add('taste--prev');
  nextTasteSlide.classList.add('taste--next');
  tastesRedirectLink.href = activeTasteSlide.dataset.href;

  if (activeSlide.classList.contains('start')) {
    markHiddenTaste();
    document.querySelectorAll('.swiper-slide.start').forEach(function (item) {
      item.classList.remove('start');
    });
    activeTasteSlide.classList.add('parallax__active-area');
    return;
  }

  Object(_init_parallax__WEBPACK_IMPORTED_MODULE_2__["clearParallaxState"])();
  setTimeout(function () {
    activeTasteSlide.classList.add('parallax__active-area');
  }, 1250);
  tastesTitles.forEach(function (item) {
    if (item.classList.contains('active')) {
      setTimeout(function () {
        item.classList.remove('active');
        item.classList.add('hiding');
        setTimeout(function () {
          item.classList.remove('hiding');
        }, 300);
      }, 200);
    }
  });
  setTimeout(function () {
    tastesTitles.find(function (title) {
      return title.dataset.titleIndex === activeSlide.dataset.swiperSlideIndex;
    }).classList.add('active');
  }, 300);
  temporaryDisableSliderNavigation();
  var hidingTasteSlide = document.querySelector('.taste--hiding');

  if (hidingTasteSlide) {
    hidingTasteSlide.classList.remove('taste--hiding');
  }

  if (direction === 'next') {
    var prevIndex = parseInt(prevTasteSlide.dataset.tasteIndex, 10);

    if (prevIndex === 0) {
      hidingTasteSlide = document.querySelector("[data-taste-index=\"".concat(tastes.length - 1, "\"]"));
    } else {
      hidingTasteSlide = document.querySelector("[data-taste-index=\"".concat(prevIndex - 1, "\"]"));
    }

    tastesWrapper.classList.remove('slide-end');
    tastesWrapper.classList.add('slide-next'); // const prevTasteBg = prevTasteSlide.querySelector('.taste__bg');
    // if (prevTasteBg) {
    //   prevTasteBg.addEventListener('animationend', () => {
    //     tastesWrapper.classList.remove('slide-next');
    //     endAnimation();
    //   });
    // } else {

    setTimeout(function () {
      tastesWrapper.classList.remove('slide-next');
      endAnimation();
    }, 1250); // }
  } else {
    var nextIndex = parseInt(nextTasteSlide.dataset.tasteIndex, 10);

    if (nextIndex === tastes.length - 1) {
      hidingTasteSlide = document.querySelector('[data-taste-index="0"]');
    } else {
      hidingTasteSlide = document.querySelector("[data-taste-index=\"".concat(nextIndex + 1, "\"]"));
    }

    tastesWrapper.classList.remove('slide-end');
    tastesWrapper.classList.add('slide-prev');
    var nextTasteBg = nextTasteSlide.querySelector('.taste__bg'); // if (nextTasteBg) {
    //   nextTasteBg.addEventListener('animationend', () => {
    //     tastesWrapper.classList.remove('slide-prev');
    //     endAnimation();
    //   });
    // } else {

    setTimeout(function () {
      tastesWrapper.classList.remove('slide-prev');
      endAnimation();
    }, 1250); // }
  }

  hidingTasteSlide.classList.add('taste--hiding');
  markHiddenTaste();
};

var clipTastes = function clipTastes() {
  tastes.forEach(function (taste) {
    Object(_clip_wave__WEBPACK_IMPORTED_MODULE_1__["clipWave"])(taste.querySelector('.taste__bg'));
    Object(_clip_wave__WEBPACK_IMPORTED_MODULE_1__["clipWave"])(taste.querySelector('.taste__pattern'));
  });
};

var initSlider = function initSlider() {
  if (!mainSlider || !tastes) {
    return;
  }

  tastesSlider = new Swiper(mainSlider, {
    slidesPerView: 1,
    spaceBetween: 0,
    loop: true,
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev'
    },
    on: {
      slideNextTransitionStart: function slideNextTransitionStart() {
        setTastesStates('next');
      },
      slidePrevTransitionStart: function slidePrevTransitionStart() {
        setTastesStates('prev');
      },
      init: function init() {
        window.addEventListener('load', _main_page__WEBPACK_IMPORTED_MODULE_0__["animateMainOnLoad"]);
      }
    }
  });
  clipTastes();
  window.addEventListener('resize', clipTastes);
};



/***/ }),

/***/ "./js/modules/mobile-vh-fix.js":
/*!*************************************!*\
  !*** ./js/modules/mobile-vh-fix.js ***!
  \*************************************/
/*! exports provided: initVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initVhFix", function() { return initVhFix; });
var breakpoint = window.matchMedia('(max-width:767px)');
var fixBlocks = document.querySelectorAll('[data-vh-fix]');
var isMobile = false;

var initVhFix = function initVhFix() {// breakpoint.addListener(breakpointChecker);
  // breakpointChecker();
  // if (isMobile) {
  //   fixBlocksHeight();
  // } else {
  //   removeBlocksHeight();
  // }
  // window.addEventListener('orientationchange', () => {
  //   setTimeout(() => {
  //     if (isMobile) {
  //       fixBlocksHeight();
  //     } else {
  //       removeBlocksHeight();
  //     }
  //   }, 200);
  // });
};

var fixBlocksHeight = function fixBlocksHeight() {
  fixBlocks.forEach(function (block) {
    var vh = window.innerHeight;
    block.style.height = "".concat(vh, "px");
  });
};

var removeBlocksHeight = function removeBlocksHeight() {
  fixBlocks.forEach(function (block) {
    block.style.height = 'inherit';
  });
};

var breakpointChecker = function breakpointChecker() {
  if (breakpoint.matches) {
    isMobile = true;
    fixBlocksHeight();
  } else {
    isMobile = false;
    removeBlocksHeight();
  }
};



/***/ }),

/***/ "./js/modules/modals/init-modals.js":
/*!******************************************!*\
  !*** ./js/modules/modals/init-modals.js ***!
  \******************************************/
/*! exports provided: initModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initModals", function() { return initModals; });
/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal */ "./js/modules/modals/modal.js");
 // настраиваем модалки тут, все колбеки импортим, а не создаем из этого модуля простыню

var initModal = function initModal(modalId, modal, btn) {
  switch (modalId) {
    case 'example':
      Object(_modal__WEBPACK_IMPORTED_MODULE_0__["setupModal"])(modal, false, btn, false, true, true);
      break;

    default:
      Object(_modal__WEBPACK_IMPORTED_MODULE_0__["setupModal"])(modal, false, btn, false, false, false);
      break;
  }
}; // аргументы setupModal(modal, closeCallback, modalBtns, openCallback, noPrevDefault, preventScrollLock)
// возможна инициализация только с первыми аргументом,
// если вам нужно открывать модалку в другом месте под какими-нибудь условиями


var initModals = function initModals() {
  var modals = document.querySelectorAll('.modal:not(.is-initialized)');
  var modalBtns = document.querySelectorAll('[data-modal]'); // фикс для редких случаев, когда модалка появляется при загрузке страницы

  if (modals.length) {
    modals.forEach(function (el) {
      setTimeout(function () {
        el.classList.remove('modal--preload');
        el.classList.add('is-initialized');
      }, 100);
    });
  }

  if (modalBtns.length) {
    modalBtns.forEach(function (btn) {
      var modalId = btn.dataset.modal;
      var modal = document.querySelector(".modal--".concat(modalId));

      if (modal) {
        initModal(modalId, modal, btn);
      }
    });
  }
};

window.initModals = initModals;


/***/ }),

/***/ "./js/modules/modals/modal.js":
/*!************************************!*\
  !*** ./js/modules/modals/modal.js ***!
  \************************************/
/*! exports provided: setupModal, openModal, closeModal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setupModal", function() { return setupModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "openModal", function() { return openModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "closeModal", function() { return closeModal; });
var openModal = function openModal(modal, callback, preventScrollLock) {
  modal.classList.add('modal--active');

  if (callback) {
    callback();
  }

  if (!preventScrollLock) {
    window.disableBodyScroll(modal, {
      reserveScrollBarGap: true
    });
  }
};

var closeModal = function closeModal(modal, callback, preventScrollLock) {
  modal.classList.remove('modal--active');

  if (callback) {
    callback();
  }

  if (!preventScrollLock) {
    setTimeout(function () {
      window.enableBodyScroll(modal);
    }, 300);
  }
};

var onEscPress = function onEscPress(evt, modal, callback) {
  var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';

  if (isEscKey && modal.classList.contains('modal--active')) {
    evt.preventDefault();
    closeModal(modal, callback);
  }
};

var setModalListeners = function setModalListeners(modal, closeCallback, preventScrollLock) {
  var overlay = modal.querySelector('.modal__overlay');
  var closeBtn = modal.querySelector('.modal__close-btn');
  closeBtn.addEventListener('click', function () {
    closeModal(modal, closeCallback, preventScrollLock);
  });
  overlay.addEventListener('click', function () {
    closeModal(modal, closeCallback, preventScrollLock);
  });
  document.addEventListener('keydown', function (evt) {
    onEscPress(evt, modal, closeCallback, preventScrollLock);
  });
};

var setupModal = function setupModal(modal, closeCallback, modalBtn, openCallback, noPrevDefault, preventScrollLock) {
  if (modalBtn) {
    modalBtn.addEventListener('click', function (evt) {
      if (!noPrevDefault) {
        evt.preventDefault();
      }

      openModal(modal, openCallback, preventScrollLock);
    });
  }

  setModalListeners(modal, closeCallback, preventScrollLock);
};



/***/ }),

/***/ "./js/modules/scroll-slider.js":
/*!*************************************!*\
  !*** ./js/modules/scroll-slider.js ***!
  \*************************************/
/*! exports provided: initScrollSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initScrollSlider", function() { return initScrollSlider; });
var initScrollSlider = function initScrollSlider() {
  var scrollSlider = new Swiper('.scroll-content__slider .swiper-container', {
    spaceBetween: 29,
    slidesPerView: 'auto'
  });
};



/***/ }),

/***/ "./js/utils/ios-android-vh-fix.js":
/*!****************************************!*\
  !*** ./js/utils/ios-android-vh-fix.js ***!
  \****************************************/
/*! exports provided: iosAndroidVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosAndroidVhFix", function() { return iosAndroidVhFix; });
var breakpoint = window.matchMedia('(max-width:767px)');

var isIos = function isIos() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

var isAndroid = function isAndroid() {
  return navigator.userAgent.includes('Android');
};

var fixVh = function fixVh() {
  var vh = window.innerHeight * 0.01;
  document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
  window.addEventListener('resize', function () {
    var isMobile = breakpoint.matches ? true : false;

    if (!isMobile) {
      vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
    }
  });
  window.addEventListener('orientationchange', function () {
    vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
  });
};

var iosAndroidVhFix = function iosAndroidVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if (isIos()) {
      fixVh();
    }
  } // временно


  fixVh();

  if (isAndroid()) {
    fixVh();
  }
};



/***/ }),

/***/ "./js/vendor/moveTo.js":
/*!*****************************!*\
  !*** ./js/vendor/moveTo.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * MoveTo - A lightweight scroll animation javascript library without any dependency.
 * Version 1.8.3 (21-07-2019 00:32)
 * Licensed under MIT
 * Copyright 2019 Hasan Aydoğdu <hsnaydd@gmail.com>
 */


var MoveTo = function () {
  /**
   * Defaults
   * @type {object}
   */
  var defaults = {
    tolerance: 0,
    duration: 800,
    easing: 'easeOutQuart',
    container: window,
    callback: function callback() {}
  };
  /**
   * easeOutQuart Easing Function
   * @param  {number} t - current time
   * @param  {number} b - start value
   * @param  {number} c - change in value
   * @param  {number} d - duration
   * @return {number} - calculated value
   */

  function easeOutQuart(t, b, c, d) {
    t /= d;
    t--;
    return -c * (t * t * t * t - 1) + b;
  }
  /**
   * Merge two object
   *
   * @param  {object} obj1
   * @param  {object} obj2
   * @return {object} merged object
   */


  function mergeObject(obj1, obj2) {
    var obj3 = {};
    Object.keys(obj1).forEach(function (propertyName) {
      obj3[propertyName] = obj1[propertyName];
    });
    Object.keys(obj2).forEach(function (propertyName) {
      obj3[propertyName] = obj2[propertyName];
    });
    return obj3;
  }

  ;
  /**
   * Converts camel case to kebab case
   * @param  {string} val the value to be converted
   * @return {string} the converted value
   */

  function kebabCase(val) {
    return val.replace(/([A-Z])/g, function ($1) {
      return '-' + $1.toLowerCase();
    });
  }

  ;
  /**
   * Count a number of item scrolled top
   * @param  {Window|HTMLElement} container
   * @return {number}
   */

  function countScrollTop(container) {
    if (container instanceof HTMLElement) {
      return container.scrollTop;
    }

    return container.pageYOffset;
  }

  ;
  /**
   * MoveTo Constructor
   * @param {object} options Options
   * @param {object} easeFunctions Custom ease functions
   */

  function MoveTo() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var easeFunctions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    this.options = mergeObject(defaults, options);
    this.easeFunctions = mergeObject({
      easeOutQuart: easeOutQuart
    }, easeFunctions);
  }
  /**
   * Register a dom element as trigger
   * @param  {HTMLElement} dom Dom trigger element
   * @param  {function} callback Callback function
   * @return {function|void} unregister function
   */


  MoveTo.prototype.registerTrigger = function (dom, callback) {
    var _this = this;

    if (!dom) {
      return;
    }

    var href = dom.getAttribute('href') || dom.getAttribute('data-target'); // The element to be scrolled

    var target = href && href !== '#' ? document.getElementById(href.substring(1)) : document.body;
    var options = mergeObject(this.options, _getOptionsFromTriggerDom(dom, this.options));

    if (typeof callback === 'function') {
      options.callback = callback;
    }

    var listener = function listener(e) {
      e.preventDefault();

      _this.move(target, options);
    };

    dom.addEventListener('click', listener, false);
    return function () {
      return dom.removeEventListener('click', listener, false);
    };
  };
  /**
   * Move
   * Scrolls to given element by using easeOutQuart function
   * @param  {HTMLElement|number} target Target element to be scrolled or target position
   * @param  {object} options Custom options
   */


  MoveTo.prototype.move = function (target) {
    var _this2 = this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (target !== 0 && !target) {
      return;
    }

    options = mergeObject(this.options, options);
    var distance = typeof target === 'number' ? target : target.getBoundingClientRect().top;
    var from = countScrollTop(options.container);
    var startTime = null;
    var lastYOffset;
    distance -= options.tolerance; // rAF loop

    var loop = function loop(currentTime) {
      var currentYOffset = countScrollTop(_this2.options.container);

      if (!startTime) {
        // To starts time from 1, we subtracted 1 from current time
        // If time starts from 1 The first loop will not do anything,
        // because easing value will be zero
        startTime = currentTime - 1;
      }

      var timeElapsed = currentTime - startTime;

      if (lastYOffset) {
        if (distance > 0 && lastYOffset > currentYOffset || distance < 0 && lastYOffset < currentYOffset) {
          return options.callback(target);
        }
      }

      lastYOffset = currentYOffset;

      var val = _this2.easeFunctions[options.easing](timeElapsed, from, distance, options.duration);

      options.container.scroll(0, val);

      if (timeElapsed < options.duration) {
        window.requestAnimationFrame(loop);
      } else {
        options.container.scroll(0, distance + from);
        options.callback(target);
      }
    };

    window.requestAnimationFrame(loop);
  };
  /**
   * Adds custom ease function
   * @param {string}   name Ease function name
   * @param {function} fn   Ease function
   */


  MoveTo.prototype.addEaseFunction = function (name, fn) {
    this.easeFunctions[name] = fn;
  };
  /**
   * Returns options which created from trigger dom element
   * @param  {HTMLElement} dom Trigger dom element
   * @param  {object} options The instance's options
   * @return {object} The options which created from trigger dom element
   */


  function _getOptionsFromTriggerDom(dom, options) {
    var domOptions = {};
    Object.keys(options).forEach(function (key) {
      var value = dom.getAttribute("data-mt-".concat(kebabCase(key)));

      if (value) {
        domOptions[key] = isNaN(value) ? value : parseInt(value, 10);
      }
    });
    return domOptions;
  }

  return MoveTo;
}();

if (true) {
  module.exports = MoveTo;
} else {}

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map